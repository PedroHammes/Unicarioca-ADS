//1. Elaborar o Modelo Integrado 
No modelo integrado, os detalhes dos livros estarão armazenados diretamente dentro 
dos documentos de empréstimos. 

    {
        "emprestimos": [ 
            { 
                "_id": ObjectId("650a6b1a56e2e63a606e29a1"), 
                "responsavel": "Alice", 
                "produtos": [ 
                { "titulo": "1984", "autor": "..." }, 
                { "titulo": "Livro A", "autor": "..." } 
                ] 
            }, 
            { 
                "_id": ObjectId("650a6b1a56e2e63a606e29a2"), 
                "responsavel": "Bob", 
                "produtos": [ 
                    { "titulo": "1984", "autor": "..." }, 
                    { "titulo": "Livro B", "autor": "..." }
                ] 
            },
            { 
                "_id": ObjectId("650a6b1a56e2e63a606e29a3"), 
                "responsavel": "Ana", 
                "produtos": [ 
                    { "titulo": "Livro A", "autor": "..." }, 
                    { "titulo": "Livro B", "autor": "..." }
                ] 
            }
        ]
    }


//2. Elaborar o Modelo Normalizado 
No modelo normalizado, os empréstimos e livros são armazenados em coleções 
separadas, e os empréstimos referenciam os livros por seus IDs. 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

    { 
        "emprestimos": [
            {
                "_id": ObjectId("650a6b1a56e2e63a606e29a1"),
                "responsavel": "Alice",
                "livrosId": [
                    ObjectId("703148977865703148977865"),
                    ObjectId("084912486831084912486831")
                ]
            },
            {
                "_id": ObjectId("650a6b1a56e2e63a606e29a2"),
                "responsavel": "Bob",
                "livrosId": [
                    ObjectId("703148977865703148977865"),
                    ObjectId("547509865875547509865875")
                ]
            },
            {
                "_id": ObjectId("650a6b1a56e2e63a606e29a3"),
                "responsavel": "Ana",
                "livrosId": [
                    ObjectId("084912486831084912486831"),
                    ObjectId("547509865875547509865875")
                ]
            }
        ],

        "livros": [
            {
                "_id": ObjectId("703148977865703148977865"),
                "titulo": "1984",
                "autor": "..."
            },
            {
                "_id": ObjectId("084912486831084912486831"),
                "titulo": "Book A",
                "autor": "..."
            },
            {
                "_id": ObjectId("547509865875547509865875")
                "titulo": "Book B",
                "autor": "..."
            }
        ]
    }


// 3. Realizar consultas 
// 3.1. Consulta 1 
// 3.1.1. Serve para os dois Modelos
Buscar todos os empréstimos de "Alice". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground

    // query do modelo integrado
        db.emprestimos.find({
            responsavel: "Alice"
        })

    // query do modelo normalizado
        db.emprestimos.find({
            responsavel: "Alice"
        })


//3.1.2. Modelo Integrado 
Buscar empréstimos que contêm o livro "1984". 
 (Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

    db.emprestimos.find({
        "produtos.titulo": "1984"
    })


//3.2. Consulta 2 
//3.2.1. Modelo Normalizado 
Buscar empréstimos que referenciam o livro "1984". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground). 

    //Resolução Carlos (Melhor):
    db.emprestimos.find({
        "livrosId": ObjectId("703148977865703148977865")
    })
    // Resultado:
    // [
    //     {
    //       "_id": ObjectId("650a6b1a56e2e63a606e29a1"),
    //       "livrosId": [
    //         ObjectId("703148977865703148977865"),
    //         ObjectId("084912486831084912486831")
    //       ],
    //       "responsavel": "Alice"
    //     },
    //     {
    //       "_id": ObjectId("650a6b1a56e2e63a606e29a2"),
    //       "livrosId": [
    //         ObjectId("703148977865703148977865"),
    //         ObjectId("547509865875547509865875")
    //       ],
    //       "responsavel": "Bob"
    //     }
    //   ]

    //Resolução Pedro:
    // A query retorna todos os empréstimos que contem o ObjectId do parâmetro
    //  dentro do array livrosId
    db.emprestimos.find({
        "livrosId": {$in: [ObjectId("703148977865703148977865")]}
    })
    // Resultado:
    // [
    //     {
    //       "_id": ObjectId("650a6b1a56e2e63a606e29a1"),
    //       "livrosId": [
    //         ObjectId("703148977865703148977865"),
    //         ObjectId("084912486831084912486831")
    //       ],
    //       "responsavel": "Alice"
    //     },
    //     {
    //       "_id": ObjectId("650a6b1a56e2e63a606e29a2"),
    //       "livrosId": [
    //         ObjectId("703148977865703148977865"),
    //         ObjectId("547509865875547509865875")
    //       ],
    //       "responsavel": "Bob"
    //     }
    //   ]

    //Resolução Pedro (2):
    // (feito) Procurar o livro com o título 1984 e capturar o ID
    // (feito) Com o ID percorrer os empréstimos
    //  (pendente) Retornar todos os empréstimos que tenham no array de livrosId o ID retornado no passo 1.
    db.livros.aggregate([
        {
            $match: { "titulo": "1984"}  //ok retorna o livro e todos os campos
        },
        {
            $project: {_id: 1, titulo: 0} //ok ObjectId("703148977865703148977865")
        }
    ])


// 4. Realizar Atualizações 
// 4.1. Atualização 1 
// 4.1.1. Serve para os dois Modelos  
Atualizar o nome do responsável "Alice" para "Alice Cooper". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

        // Modelo integrado
        db.emprestimos.update(
            {"responsavel": "Alice"},
            { $set: {"responsavel": "Alice Cooper"}}
        )

        //  Modelo normalizado
        db.emprestimos.update(
            {"responsavel": "Alice"},
            { $set: {"responsavel": "Alice Cooper"}}
        )


// 4.1.2. Modelo Integrado 
Atualizar o autor de "1984" para "G. Orwell". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).
        // GPT
        db.emprestimos.updateMany(
            { "produtos.titulo": "1984" },
            { $set: { "produtos.$[].autor": "G. Orwell" } }
        )

        // GPT 2 (?)
        // Identifica os emprestimos que contenham este livro
        db.emprestimos.find({
            "produtos.titulo": "1984"
        })

        //atualiza um registro por vez
        db.emprestimos.update(
            { "_id": ObjectId("650a6b1a56e2e63a606e29a1"), "produtos.titulo":"1984" },
            { $set: {"produtos.$.autor": "G. Orwell"}}
        )

        db.emprestimos.updateOne(
            { "_id": ObjectId("650a6b1a56e2e63a606e29a2"), "produtos.titulo": "1984" },
            { $set: { "produtos.$.autor": "G. Orwell" } }
        )

// 4.2. Atualização 2 
// 4.2.1. Modelo Normalizado 
Atualizar o autor de "1984" para "G. Orwell" 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

            // Correto
            db.livros.update(
                { "titulo": "1984" },
                { $set: {"autor": "G. Orwell"}}
            )