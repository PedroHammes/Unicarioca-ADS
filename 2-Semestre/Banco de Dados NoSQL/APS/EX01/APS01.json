//1. Elaborar o Modelo Integrado 
No modelo integrado, os detalhes dos livros estarão armazenados diretamente dentro 
dos documentos de empréstimos. 

    [ 
        { 
            "_id": ObjectId("650a6b1a56e2e63a606e29a1"), 
            "responsavel": "Alice", 
            "livros": [ 
                { "titulo": "1984", "autor": "..." }, 
                { "titulo": "Livro A", "autor": "..." } 
            ] 
        }, 
        { 
            "_id": ObjectId("650a6b1a56e2e63a606e29a2"), 
            "responsavel": "Bob", 
            "livros": [ 
                { "titulo": "1984", "autor": "..." }, 
                { "titulo": "Livro B", "autor": "..." }
            ] 
        },
        { 
            "_id": ObjectId("650a6b1a56e2e63a606e29a3"), 
            "responsavel": "Ana", 
            "livros": [ 
                { "titulo": "Livro A", "autor": "..." }, 
                { "titulo": "Livro B", "autor": "..." }
            ] 
        }
    ]


//2. Elaborar o Modelo Normalizado 
No modelo normalizado, os empréstimos e livros são armazenados em coleções 
separadas, e os empréstimos referenciam os livros por seus IDs. 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

    { 
        "emprestimos": [
            {
                "_id": ObjectId("650a6b1a56e2e63a606e29a1"),
                "responsavel": "Alice",
                "livrosId": [
                    ObjectId("703148977865703148977865"),
                    ObjectId("084912486831084912486831")
                ]
            },
            {
                "_id": ObjectId("650a6b1a56e2e63a606e29a2"),
                "responsavel": "Bob",
                "livrosId": [
                    ObjectId("703148977865703148977865"),
                    ObjectId("547509865875547509865875")
                ]
            },
            {
                "_id": ObjectId("650a6b1a56e2e63a606e29a3"),
                "responsavel": "Ana",
                "livrosId": [
                    ObjectId("084912486831084912486831"),
                    ObjectId("547509865875547509865875")
                ]
            }
        ],

        "livros": [
            {
                "_id": ObjectId("703148977865703148977865"),
                "titulo": "1984",
                "autor": "..."
            },
            {
                "_id": ObjectId("084912486831084912486831"),
                "titulo": "Book A",
                "autor": "..."
            },
            {
                "_id": ObjectId("547509865875547509865875")
                "titulo": "Book B",
                "autor": "..."
            }
        ]
    }


// 3. Realizar consultas 
// 3.1. Consulta 1 
// 3.1.1. Serve para os dois Modelos
Buscar todos os empréstimos de "Alice". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground

    // query do modelo integrado
        db.collection.find({
            responsavel: "Alice"
        })

    // query do modelo normalizado
        db.emprestimos.find({
            responsavel: "Alice"
        })


//3.1.2. Modelo Integrado 
Buscar empréstimos que contêm o livro "1984". 
 (Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

    db.collection.find({
        "livros.titulo": "1984"
    })


//3.2. Consulta 2 
//3.2.1. Modelo Normalizado 
Buscar empréstimos que referenciam o livro "1984". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground). 

    //Resolução Carlos (Melhor):
    db.emprestimos.find({
        "livrosId": ObjectId("703148977865703148977865")
    })


// 4. Realizar Atualizações 
// 4.1. Atualização 1 
// 4.1.1. Serve para os dois Modelos  
Atualizar o nome do responsável "Alice" para "Alice Cooper". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

        // Modelo integrado
        db.collection.update(
            {"responsavel": "Alice"},
            { $set: {"responsavel": "Alice Cooper"}}
        )

        //  Modelo normalizado
        db.emprestimos.update(
            {"responsavel": "Alice"},
            { $set: {"responsavel": "Alice Cooper"}}
        )


// 4.1.2. Modelo Integrado 
Atualizar o autor de "1984" para "G. Orwell". 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

        // Essa resposta att apenas a primeira ocorrência, mas veio direto do gabarito.
        db.collection.update( 
            { "produtos.titulo": "1984" }, 
            { $set: { "livros.$.autor": "G. Orwell" } } 
        )

        // Em teoria esta query alteraria o autor do 1984 em todas as ocorrências do mesmo em empréstimos
        //  mas o mongoplayground não aceita a função updateMany então não consigo validar a teoria.
        db.collection.updateMany(
            { "livros.titulo": "1984" },
            { $set: { "livros.$[elem].autor": "G. Orwell" } },
            { arrayFilters: [{ "elem.titulo": "1984"}]}
        )

// 4.2. Atualização 2 
// 4.2.1. Modelo Normalizado 
Atualizar o autor de "1984" para "G. Orwell" 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

            // Correto
            db.livros.update(
                { "titulo": "1984" },
                { $set: {"autor": "G. Orwell"}}
            )


// 5. Realizar Consultas de Agregação 
// 5.1. Agregação 1 
// 5.1.1. Modelo Integrado 
Contar quantos livros foram emprestados em cada empréstimo. 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).

            // Correto (Alternativa 1)
            // $project: Seleciona os campos que você deseja incluir no resultado.
                // responsavel: 1: Inclui o campo "responsável" no resultado.
                // quantidade_livros: Usa o operador $size para contar o número de itens no array "produtos", que corresponde à quantidade de livros emprestados.      
            db.collection.aggregate([
                    {
                        $project: {
                            responsavel: 1,
                            quantidade: { $size: "$livros"}
                        }
                    }
            ])


// 5.1.2. Modelo Normalizado 
Contar quantos livros foram emprestados em cada empréstimo. 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) do 
Mongo Playground).

                // Correto
                db.emprestimos.aggregate([
                    {
                        $project: {
                            responsavel: 1,
                            quantidade: { $size: "$livrosId"}
                        }
                    }
                ])


// 5.2. Agregação 2 
// 5.2.1. Modelo Integrado 
Listar os empréstimos que contêm mais de 1 livro. 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground)

                db.collection.aggregate([
                    {$project: { quantidade: {$size: "$livros"}}},
                    {$match: {quantidade: {$gt: 1}}}
                ])


// 5.2.2. Modelo Normalizado 
Listar os empréstimos que contêm mais de 1 livro. 
(Responda na forma de texto ou na forma de captura legível da tela (printscreen) 
do Mongo Playground).
                
                //Correto
                db.emprestimos.find({
                    $expr: { $gt: [{ $size: "$livrosId"}, 1]}
                })